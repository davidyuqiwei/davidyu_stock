#https://zhuanlan.zhihu.com/p/58825020
from __future__ import absolute_import, division, print_function, unicode_literals

# TensorFlow and tf.keras
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
# Helper libraries
import numpy as np
import matplotlib.pyplot as plt
from load_model_data import *
print(tf.__version__)


def load_model(input_shape1):
    model = tf.keras.Sequential()
    model.add(tf.keras.layers.LSTM(32,input_shape=(None, input_shape1)))
    model.add(layers.Dense(1, activation='sigmoid'))
    model.compile(optimizer='sgd',
         loss='binary_crossentropy',
         metrics=['accuracy'])
    return model


data_dir = "/home/davidyu/stock/data/test/for_lstm"
file_name = "SH_index.csv"
df1 = read_mv_avg_data_clean(data_dir,file_name)
history_days = 30
df1 = make_history_price(df1,history_days)
train_nums = 4000
y_start = 2
train_X,train_y,test_X,test_y,y_min,y_max = make_train_test_data(df1,train_nums,y_start)



input_shape1 = train_X.shape[2]
model = load_model(input_shape1)
model.fit(train_X, train_y, 
     validation_data=(test_X, test_y),batch_size=32,epochs=100)

result = model.predict(test_X, batch_size=32)
result_list = [x[0] for x in result]

data_dict = {
    "test_y": test_y.tolist(),
    "test_y_predict": result_list
    }

from sklearn.metrics import mean_squared_error
mean_s_error = mean_squared_error(test_y,result_list)
print(mean_s_error)
abs_error = np.sum(np.abs(a1))
print(abs_error)
df_out = pd.DataFrame(data_dict)

df_out.to_csv("test.csv")






#result = model.predict(train_x, batch_size=32)
#print(result)
